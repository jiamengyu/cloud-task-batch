buildscript {
	ext {
		springBootVersion = '1.5.13.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
  id 'net.researchgate.release' version '2.6.0'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'

group = 'ca.itm.demo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


ext {
	springCloudServicesVersion = '1.6.3.RELEASE'
	springCloudTaskVersion = '1.2.2.RELEASE'
	springCloudVersion = 'Edgware.RELEASE'
	springDataFlowVersion = '1.5.0.RELEASE'
}

dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-task')
	compile('org.springframework.cloud:spring-cloud-task-batch')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile("org.springframework.boot:spring-boot-starter-batch")
	compile('org.springframework.boot:spring-boot-configuration-processor')
	compile('io.pivotal.spring.cloud:spring-cloud-services-starter-config-client')
	compile('org.springframework.cloud:spring-cloud-dataflow-rest-client:1.5.0.RELEASE')
	
	testRuntime('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

//configurations {
//    compile.exclude module: 'spring-boot-starter-tomcat'
//    compile.exclude module: 'spring-boot-starter-web'
//}

dependencyManagement {
	imports {
		mavenBom "io.pivotal.spring.cloud:spring-cloud-services-dependencies:${springCloudServicesVersion}"
//		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-task-dependencies:${springCloudTaskVersion}"
	}
}

publishing {

    publications {
		mavenJava(MavenPublication) {
		    from components.java
		}      
    }
    
	repositories {
	    maven {
		    credentials {
	            username nexusUsername
	            password nexusPassword
	        }
            if(project.version.endsWith('-SNAPSHOT')) {
				name "itm-snapshots"
				url "${nexusUrl}/xyz0-snapshots/"
          	} else {
				name "itm-releases"
				url "${nexusUrl}/xyz0-releases/"
          	}	        
	    }
	}    
}

tasks.withType(PublishToMavenRepository) { it.dependsOn build }

